#create new react-native expo app with TS
npx create-expo-app News71 --template

#install react-devtools
npm i react-devtools

#use this to make react-devtools to debug on port 19000 also
adb devices
adb -s <device-name> reverse tcp:8097 tcp:8097


#install redux-toolkit and react-redux
npm install @reduxjs/toolkit react-redux

#Error: could not connect to TCP port 5554: cannot connect to 127.0.0.1:5554: No connection could be made because the target machine actively refused it. (10061)
adb devices
adb -s <device-name> reverse tcp:8097 tcp:8097

#install NativeBase components
npm install native-base
expo install react-native-svg@12.1.1 
expo install react-native-safe-area-context@3.3.2  

#install babel-module-resolver for aliasing
npm i babel-plugin-module-resolver

#install react-navigation
npm i @react-navigation/native @react-navigation/native-stack
npm install react-native-screens react-native-safe-area-context

#install expo-web-browser for in app browser page
npx expo install expo-web-browser

#install react-hook-form for auth screens
npm install react-hook-form

#install firebase https://docs.expo.dev/guides/using-firebase/
npx expo install firebase
npx expo customize metro.config.js

#uninstall firebase
npm uninstall firebase @types/firebase

#install async-storage
npx expo install @react-native-async-storage/async-storage

#install navigation drawer
npx expo install react-native-gesture-handler react-native-reanimated
add "import "react-native-gesture-handler";" in App.tsx
react-native-reanimated@2.12.0 works on oneplus
add  "react-native-reanimated/plugin", to babel.config.js plugins

#integrating envs [deleted]
1. created ./config/index.js and ./config/.env.dev and ./config/.env.prod
2. in package.json replaced start script with "node ./config/index.js -env=dev && expo start -c"
3. installed react-native-dotenv according to https://www.npmjs.com/package/react-native-dotenv
-- tried, "node exec,spawn" and "node-powershell" approaches as well but nothing worked
-- removed npm start scripts and create local.dev.ps1 and local.prod.ps1 for local dev workflow

#eas build apk and deploy
1. eas build:configure
2. modify preview in eas.json 
 {
    ...,
    "preview": {
      "android": {
        "buildType": "apk"
      },
      "env": {
        "ENVIRONMENT": "prod"
      }
    }
    ...,
 }
3. eas build -p android --profile preview 

# add bcryptjs
1. npm i bcryptjs @types/bcryptjs --save
2. add fallback 
-> setRandomFallback((len: number) => {
  const buf = new Uint8Array(len);
  return Array.from(buf.map(() => Math.floor(Math.random() * 256)));
});